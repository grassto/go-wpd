//
// THIS IS AUTO GENERATED FILE
//

package gowpd

// #include <libgowpd.h>
import "C"
import "fmt"

func (hr HRESULT) String() string {
	switch hr {
	case S_OK:
		return "S_OK"
	case S_FALSE:
		return "S_FALSE"
	case E_ABORT:
		return "E_ABORT"
	case E_ACCESSDENIED:
		return "E_ACCESSDENIED"
	case E_FAIL:
		return "E_FAIL"
	case E_HANDLE:
		return "E_HANDLE"
	case E_INVALIDARG:
		return "E_INVALIDARG"
	case E_NOINTERFACE:
		return "E_NOINTERFACE"
	case E_NOTIMPL:
		return "E_NOTIMPL"
	case E_OUTOFMEMORY:
		return "E_OUTOFMEMORY"
	case E_POINTER:
		return "E_POINTER"
	case E_UNEXPECTED:
		return "E_UNEXPECTED"
	case CO_E_NOTINITIALIZED:
		return "CO_E_NOTINITIALIZED"
	default:
		return fmt.Sprintf("%#x", uint32(hr))
	}
}

func (clsid CLSID) toCCLSID() *C.CLSID {
	switch clsid {
	case CLSID_PortableDeviceManager:
		return &C.CLSID_PortableDeviceManager
	default:
		panic("unexpected")
	}
}

func (guid GUID) toCGUID() *C.GUID {
	switch guid {
	case WPD_CONTENT_TYPE_FUNCTIONAL_OBJECT:
		return &C.WPD_CONTENT_TYPE_FUNCTIONAL_OBJECT
	case WPD_CONTENT_TYPE_FOLDER:
		return &C.WPD_CONTENT_TYPE_FOLDER
	case WPD_CONTENT_TYPE_IMAGE:
		return &C.WPD_CONTENT_TYPE_IMAGE
	case WPD_CONTENT_TYPE_DOCUMENT:
		return &C.WPD_CONTENT_TYPE_DOCUMENT
	case WPD_CONTENT_TYPE_CONTACT:
		return &C.WPD_CONTENT_TYPE_CONTACT
	case WPD_CONTENT_TYPE_CONTACT_GROUP:
		return &C.WPD_CONTENT_TYPE_CONTACT_GROUP
	case WPD_CONTENT_TYPE_AUDIO:
		return &C.WPD_CONTENT_TYPE_AUDIO
	case WPD_CONTENT_TYPE_VIDEO:
		return &C.WPD_CONTENT_TYPE_VIDEO
	case WPD_CONTENT_TYPE_TELEVISION:
		return &C.WPD_CONTENT_TYPE_TELEVISION
	case WPD_CONTENT_TYPE_PLAYLIST:
		return &C.WPD_CONTENT_TYPE_PLAYLIST
	case WPD_CONTENT_TYPE_MIXED_CONTENT_ALBUM:
		return &C.WPD_CONTENT_TYPE_MIXED_CONTENT_ALBUM
	case WPD_CONTENT_TYPE_AUDIO_ALBUM:
		return &C.WPD_CONTENT_TYPE_AUDIO_ALBUM
	case WPD_CONTENT_TYPE_IMAGE_ALBUM:
		return &C.WPD_CONTENT_TYPE_IMAGE_ALBUM
	case WPD_CONTENT_TYPE_VIDEO_ALBUM:
		return &C.WPD_CONTENT_TYPE_VIDEO_ALBUM
	case WPD_CONTENT_TYPE_MEMO:
		return &C.WPD_CONTENT_TYPE_MEMO
	case WPD_CONTENT_TYPE_EMAIL:
		return &C.WPD_CONTENT_TYPE_EMAIL
	case WPD_CONTENT_TYPE_APPOINTMENT:
		return &C.WPD_CONTENT_TYPE_APPOINTMENT
	case WPD_CONTENT_TYPE_TASK:
		return &C.WPD_CONTENT_TYPE_TASK
	case WPD_CONTENT_TYPE_PROGRAM:
		return &C.WPD_CONTENT_TYPE_PROGRAM
	case WPD_CONTENT_TYPE_GENERIC_FILE:
		return &C.WPD_CONTENT_TYPE_GENERIC_FILE
	case WPD_CONTENT_TYPE_CALENDAR:
		return &C.WPD_CONTENT_TYPE_CALENDAR
	case WPD_CONTENT_TYPE_GENERIC_MESSAGE:
		return &C.WPD_CONTENT_TYPE_GENERIC_MESSAGE
	case WPD_CONTENT_TYPE_NETWORK_ASSOCIATION:
		return &C.WPD_CONTENT_TYPE_NETWORK_ASSOCIATION
	case WPD_CONTENT_TYPE_CERTIFICATE:
		return &C.WPD_CONTENT_TYPE_CERTIFICATE
	case WPD_CONTENT_TYPE_WIRELESS_PROFILE:
		return &C.WPD_CONTENT_TYPE_WIRELESS_PROFILE
	case WPD_CONTENT_TYPE_MEDIA_CAST:
		return &C.WPD_CONTENT_TYPE_MEDIA_CAST
	case WPD_CONTENT_TYPE_SECTION:
		return &C.WPD_CONTENT_TYPE_SECTION
	case WPD_CONTENT_TYPE_UNSPECIFIED:
		return &C.WPD_CONTENT_TYPE_UNSPECIFIED
	case WPD_CONTENT_TYPE_ALL:
		return &C.WPD_CONTENT_TYPE_ALL
	case WPD_OBJECT_FORMAT_EXIF:
		return &C.WPD_OBJECT_FORMAT_EXIF
	case WPD_OBJECT_FORMAT_WMA:
		return &C.WPD_OBJECT_FORMAT_WMA
	case WPD_OBJECT_FORMAT_VCARD2:
		return &C.WPD_OBJECT_FORMAT_VCARD2
	default:
		panic("unexpected")
	}
}

func (propertyKey PropertyKey) toCPropertyKey() *C.PROPERTYKEY {
	switch propertyKey {
	case WPD_CLIENT_NAME:
		return &C.WPD_CLIENT_NAME
	case WPD_CLIENT_MAJOR_VERSION:
		return &C.WPD_CLIENT_MAJOR_VERSION
	case WPD_CLIENT_MINOR_VERSION:
		return &C.WPD_CLIENT_MINOR_VERSION
	case WPD_CLIENT_REVISION:
		return &C.WPD_CLIENT_REVISION
	case WPD_CLIENT_SECURITY_QUALITY_OF_SERVICE:
		return &C.WPD_CLIENT_SECURITY_QUALITY_OF_SERVICE
	case WPD_CLIENT_DESIRED_ACCESS:
		return &C.WPD_CLIENT_DESIRED_ACCESS
	case WPD_OBJECT_PARENT_ID:
		return &C.WPD_OBJECT_PARENT_ID
	case WPD_OBJECT_NAME:
		return &C.WPD_OBJECT_NAME
	case WPD_OBJECT_PERSISTENT_UNIQUE_ID:
		return &C.WPD_OBJECT_PERSISTENT_UNIQUE_ID
	case WPD_OBJECT_FORMAT:
		return &C.WPD_OBJECT_FORMAT
	case WPD_OBJECT_CONTENT_TYPE:
		return &C.WPD_OBJECT_CONTENT_TYPE
	case WPD_OBJECT_SIZE:
		return &C.WPD_OBJECT_SIZE
	case WPD_OBJECT_ORIGINAL_FILE_NAME:
		return &C.WPD_OBJECT_ORIGINAL_FILE_NAME
	case WPD_PROPERTY_ATTRIBUTE_FORM:
		return &C.WPD_PROPERTY_ATTRIBUTE_FORM
	case WPD_PROPERTY_ATTRIBUTE_CAN_READ:
		return &C.WPD_PROPERTY_ATTRIBUTE_CAN_READ
	case WPD_PROPERTY_ATTRIBUTE_CAN_WRITE:
		return &C.WPD_PROPERTY_ATTRIBUTE_CAN_WRITE
	case WPD_PROPERTY_ATTRIBUTE_CAN_DELETE:
		return &C.WPD_PROPERTY_ATTRIBUTE_CAN_DELETE
	case WPD_PROPERTY_ATTRIBUTE_DEFAULT_VALUE:
		return &C.WPD_PROPERTY_ATTRIBUTE_DEFAULT_VALUE
	case WPD_PROPERTY_ATTRIBUTE_FAST_PROPERTY:
		return &C.WPD_PROPERTY_ATTRIBUTE_FAST_PROPERTY
	case WPD_PROPERTY_ATTRIBUTE_RANGE_MIN:
		return &C.WPD_PROPERTY_ATTRIBUTE_RANGE_MIN
	case WPD_PROPERTY_ATTRIBUTE_RANGE_MAX:
		return &C.WPD_PROPERTY_ATTRIBUTE_RANGE_MAX
	case WPD_PROPERTY_ATTRIBUTE_RANGE_STEP:
		return &C.WPD_PROPERTY_ATTRIBUTE_RANGE_STEP
	case WPD_PROPERTY_ATTRIBUTE_ENUMERATION_ELEMENTS:
		return &C.WPD_PROPERTY_ATTRIBUTE_ENUMERATION_ELEMENTS
	case WPD_PROPERTY_ATTRIBUTE_REGULAR_EXPRESSION:
		return &C.WPD_PROPERTY_ATTRIBUTE_REGULAR_EXPRESSION
	case WPD_PROPERTY_ATTRIBUTE_MAX_SIZE:
		return &C.WPD_PROPERTY_ATTRIBUTE_MAX_SIZE
	default:
		panic("unexpected")
	}
}

func (iid IID) toCIID() *C.IID {
	switch iid {
	case IID_IPortableDeviceValues:
		return &C.IID_IPortableDeviceValues
	case IID_IPortableDeviceDataStream:
		return &C.IID_IPortableDeviceDataStream
	default:
		panic("unexpected")
	}
}
